// üëâ –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Äî –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ –±—É–∫–≤–∞–º
const headingText = "–§—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–∏–º –º—ã—à–ª–µ–Ω–∏–µ–º";
const headingElement = document.getElementById('typed-heading');
let headingIndex = 0;

function typeHeading() {
    if (headingIndex < headingText.length) {
        headingElement.innerHTML += headingText.charAt(headingIndex);
        headingIndex++;
        setTimeout(typeHeading, 20); // üïí —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–º—Å –Ω–∞ —Å–∏–º–≤–æ–ª)
    } else {
        setTimeout(typeDescription, 1500); // üïí –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞
    }
}

setTimeout(typeHeading, 100); // üïí –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞

// üëâ –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ ‚Äî –ø–µ—á–∞—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
const descText = "–°–æ–∑–¥–∞—é –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å–∞–π—Ç—ã —Å –Ω—É–ª—è, –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—é –≤ WordPress –∏ –¥—Ä—É–≥–∏–µ CMS.\n–ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–µ —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Å—Ç–∫–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∞ –≤—ã–∑–æ–≤ –¥–æ–≤–µ—Ä–∏—è –∫ –≤–∞—à–µ–º—É –ø—Ä–æ–¥—É–∫—Ç—É.";
const descElement = document.getElementById('typed-description');
let descIndex = 0;

function typeDescription() {
    if (descIndex < descText.length) {
        const char = descText.charAt(descIndex);
        descElement.innerHTML += char === '\n' ? '<br>' : char;
        descIndex++;
        setTimeout(typeDescription, 20); // üïí —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞
    }
}

// üëâ –≠—Ñ—Ñ–µ–∫—Ç –º–∏–≥–∞—é—â–µ–≥–æ –∫—É—Ä—Å–æ—Ä–∞ –ø–µ—Ä–µ–¥ –ø–µ—á–∞—Ç—å—é –∫–æ–¥–∞
const typingCodeBlock = document.querySelector('.typing-code');
if (typingCodeBlock) {
    typingCodeBlock.classList.add('blinking-only');
    typingCodeBlock.style.setProperty('--cursor-visible', 'visible');

    // üïí –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–µ—á–∞—Ç–∏ –∫–æ–¥–∞
    setTimeout(() => {
        typingCodeBlock.classList.remove('blinking-only');
        document.querySelector('.typing-code::after')?.style?.setProperty?.('visibility', 'hidden');
        typeCode();
    }, 8000);
}

// üëâ –°–∞–º –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—á–∞—Ç–∞–µ—Ç—Å—è
const typingElement = document.getElementById('typing-code');
const codeToType = `// Animation loop example\nfunction fadeIn(element) {\n  let opacity = 0;\n  const step = () => {\n    opacity += 0.05;\n    element.style.opacity = opacity;\n    if (opacity < 1) requestAnimationFrame(step);\n  };\n  step();\n}\n\nconst heading = document.querySelector('h1');\nfadeIn(heading);`;

let charIndex = 0;
let codeCycle = 0;

function typeCode() {
    if (charIndex < codeToType.length) {
        typingElement.textContent += codeToType.charAt(charIndex);
        charIndex++;
        setTimeout(typeCode, 15); // üïí —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏ –∫–æ–¥–∞ (–º—Å –Ω–∞ —Å–∏–º–≤–æ–ª)
    } else {
        // üïí –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—á–∞—Ç–∏
        setTimeout(() => {
            const btn = document.getElementById('portfolio-btn');
            const contactBtn = document.getElementById('contact-btn');
            codeCycle++;

            // –ö–Ω–æ–ø–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ–æ—á–µ—Ä—ë–¥–Ω–æ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ü–∏–∫–ª–∞ –∫–æ–¥–∞
            if (codeCycle === 1) {
                btn.style.display = 'inline-block';
                setTimeout(() => btn.style.opacity = '1', 50);
            }
            if (codeCycle === 1) {
                contactBtn.style.display = 'inline-block';
                setTimeout(() => contactBtn.style.opacity = '1', 50);
            }

            // –≠—Ñ—Ñ–µ–∫—Ç –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–µ—á–∞—Ç—å
            typingElement.classList.add('scroll-up');
            setTimeout(() => {
                typingElement.classList.remove('scroll-up');
                typingElement.textContent = '';
                charIndex = 0;
                setTimeout(typeCode, 4000); // üïí –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º –ø–µ—á–∞—Ç–∏ –∫–æ–¥–∞
            }, 1500); // üïí –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ scroll-up
        }, 2500); // üïí –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–¥–∞ –ø–µ—Ä–µ–¥ scroll-up
    }
}

// üëâ –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å–≤–µ—Ç–ª–æ–π/—Ç—ë–º–Ω–æ–π —Ç–µ–º—ã
const toggleBtn = document.getElementById('theme-toggle');
if (toggleBtn) {
    const body = document.body;
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'light-theme') {
        body.classList.add('light-theme');
    }

    toggleBtn.addEventListener('click', () => {
        body.classList.toggle('light-theme');
        const currentTheme = body.classList.contains('light-theme') ? 'light-theme' : 'default';
        localStorage.setItem('theme', currentTheme);
    });
}

// üëâ –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
const fadeSections = document.querySelectorAll('.fade-section');
const hiddenSections = document.querySelectorAll('.hidden-section');
const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
            observer.unobserve(entry.target);
        }
    });
}, { threshold: 0.1 });

fadeSections.forEach(section => {
    observer.observe(section);
    section.classList.remove('hidden-section');
});
